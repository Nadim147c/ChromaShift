"$schema" = "../rule.schema.json"

stderr = true

[[rules]] #
regexp = 'stow dir is (.*)'
colors = ",path"

[[rules]]
regexp = 'stow dir path relative to target (.*) is (.*)'
colors = ',path,path'

[[rules]] # cwd no/restored to
regexp = 'cwd (?:now|restored to) (.*)'
colors = ",path"

[[rules]]
regexp = 'Planning stow of: (.*) ...'
colors = ',bold green'

[[rules]]
regexp = 'Planning stow of package ....'
colors = ',bold green'

[[rules]]
regexp = 'level of (.*) is (\d+)'
colors = ',path,red'

[[rules]]
regexp = '(---) (Skipping) (.*) as it already points to (.*)'
colors = ',red,bold yellow,path,path'


[[rules]]
regexp = '^Stowing (?:entry|contents of) (.*) / (.*) / (.*)(?: \(cwd=(.*)\))$'
colors = ',path,path,path,path'
priority = 100

[[rules]]
regexp = '^Stowing (?:entry|contents of) (.*) / (.*) / (.*)$'
colors = ',path,path,path'

[[rules]]
regexp = '^\s*(\|)'
colors = ',bold green'

[[rules]]
regexp = '^\s*(yes) -'
colors = ',bold green'

[[rules]]
regexp = '^\s*(is_a_link)\((.*)\):(.*)'
colors = ',bold cyan,red,green'
